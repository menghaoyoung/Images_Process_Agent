(1) Modify the program to read an input image, calculate the length of a specified line segment based on the image resolution（1.08 μm/pixel）, input via image_dir. Output grayscale values (0-255) for all points along a line segment defined by start and end points. For example, the program should be runnable with a command like python py1.py -resolution=1.08. Save all grayscale values as an array in a CSV file, and save the measured line segment length to a text file. Continue modifying the program to calculate u_eq using the output grayscale array using the formula: u_eq = u_min + (gray_values / 255) * u_max. Finally, plot u_eq against distance from the start point and save as a TIFF image, save all the distance and u_eq as a csv file. . Ensure all saved files/images are named according to the input image filename. The required variables (start_point, end_point, resolution, u_max=65535, u_min) are provided in the [Parameters] section below. Only modify the program and save it as py1.py, do not execute it in this step.
(2) Then, Run py1.py in the background for resolution = 1.08, and verify if the output images, text files, and CSV files exist. If they exist, print "Calculation successful".
(3) Utilize Python to generate a Word document and write a detailed simulation report (500 words) based on the generated graphs and provided instructions. Choose a suitable title and divide the report into four sections: begin with an Abstract, followed by an "Introduction" section briefly describing purpose and background, a "Methods" section discussing programming approaches, and a "Results" section presenting findings. Incorporate graphs and calculated data from steps 2 and 3 (e.g., "as shown in Fig. 1"). Each section should contain approximately 200 words.

[input images path]:  image_path = "C:\Users\admin\Desktop\Python_proj\datas\T2_IMGS\Li_1.0.png" 

[Parameters]:
start_point = (152, 29)
end_point = (135, 92)
u_max = 65535
u_min = 0

[Python Program framework]:
import os
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
import sys
import io

sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

# Core function: Get line grayscale values 
def get_line_grayscale():

# Core function: Calculate u_eq
def calculate_μeq() -> np.ndarray

# Plot function: Plot u_eq curve
def plot_μeq_curve():

# Main program execution
def main()
[END of python program]

[Files output path]: "C:\Users\admin\Desktop\For git\All_Outputs"
